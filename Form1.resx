<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ABvAAAAb+AAAG//AAAP//gAD///wHw==
</value>
  </data>
</root>